@model ProjectViewModel

@{
    ViewData["Title"] = "Project Details";
}

@section Styles{
    <!-- iCheck for checkboxes and radio inputs -->
    <link rel="stylesheet" href="~/App/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <link rel="stylesheet" href="~/app/plugins/datatables-bs4/css/dataTables.bootstrap4.css">
}
    <div class="row justify-content-center">
        <div class="alert alert-success col-md-4" id="emailSuccess" style="display:none" role="alert">
            <p class="text-center align-middle mb-0">Email is being Sent!</p>
        </div>
        <div class="alert alert-danger col-md-4" id="emailFailure" style="display:none" role="alert">
            <p class="text-center align-middle mb-0">There was a problem sending email!</p>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card card-primary card-outline">
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-sm-8">
                            <div class="user-block">
                                <img class="img-circle img-bordered-sm" src="~/App/img/projectIcon.png" alt="User Image">
                                <span class="username">
                                    <a href="#">@Model.Title</a>
                                </span>
                                <span class="description">Created on @Convert.ToDateTime(Model.CreatedDate).ToString("dd-MMM-yy") : @Model.UserName  <span class="badge badge-pill badge-success ml-1">@Model.Role</span></span>
                            </div>
                        </div>

                        <!--For Archive -->
                        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalCenterTitle">Archive</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <p>Are you sure, you want to archive this project?</p>
                                        <form id="archiveForm" asp-area="App" asp-controller="Project" asp-action="Archive" method="post" asp-antiforgery="true">
                                            <input type="hidden" asp-for="@Model.Id" />
                                        </form>
                                    </div>
                                    <div class="modal-footer justify-content-between">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                        <button type="submit" id="archiveButton" class="btn btn-danger">Yes, Archive!</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @if (Model.Role.ToString() == "Owner")
                        {
                            <div class="col-sm-4 d-inline-flex">
                                <button type="button" class="btn btn-success mr-2" data-toggle="modal" id="inviteMemberButton" data-target="#emailModalCenter">Invitation Member</button>
                                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-secondary mr-2">Edit Project</a>
                                <div class="dropdown">
                                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    </button>
                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                        <a class="dropdown-item" href="#">View Report</a>
                                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#exampleModalCenter">Archive</a>
                                        <a class="dropdown-item" href="#">Delete</a>
                                    </div>
                                </div>
                            </div>
                        }                  
                </div>
                <!-- Project Configuration -->
                <div class="row">
                    <div class="col-sm-12">
                        <div class="h5">
                            Project Configuration
                        </div>
                        <table class="table table-bordered">
                            <tr>
                                <td>
                                    <div class="form-group clearfix">
                                        <div class="icheck-success d-inline">
                                            <input type="checkbox" disabled id="checkbox1" asp-for="AllowScreenshot">
                                            <label for="checkbox1">
                                                Allow Screenshot
                                            </label>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="form-group clearfix">
                                        <div class="icheck-success d-inline">
                                            <label for="checkbox1">
                                                Time Interval : @Model.TimeInterval minutes
                                            </label>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="form-group clearfix">
                                        <div class="icheck-success d-inline">
                                            <input type="checkbox" disabled id="checkbox2" asp-for="AllowWebcam">
                                            <label for="checkbox2">
                                                Allow Webcam
                                            </label>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="form-group clearfix">
                                        <div class="icheck-success d-inline">
                                            <input type="checkbox" disabled id="checkbox3" asp-for="AllowKeyboardHit">
                                            <label for="checkbox3">
                                                Allow Keyboard Hit
                                            </label>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group clearfix">
                                        <div class="icheck-success d-inline">
                                            <input type="checkbox" disabled id="checkboxSuccess1" asp-for="AllowMouseClick">
                                            <label for="checkboxSuccess1">
                                                Allow Mouse Click
                                            </label>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="form-group clearfix">
                                        <div class="icheck-success d-inline">
                                            <input type="checkbox" disabled id="checkboxSuccess1" asp-for="AllowActiveWindow">
                                            <label for="checkboxSuccess1">
                                                Allow Active Window
                                            </label>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="form-group clearfix">
                                        <div class="icheck-success d-inline">
                                            <input type="checkbox" disabled id="checkboxSuccess1" asp-for="AllowManualTimeEntry">
                                            <label for="checkboxSuccess1">
                                                Allow Manual Time Entry
                                            </label>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="form-group clearfix">
                                        <div class="icheck-success d-inline">
                                            <input type="checkbox" disabled id="checkboxSuccess1" asp-for="AllowRunningProgram">
                                            <label for="checkboxSuccess1">
                                                Allow Running Program
                                            </label>
                                        </div>
                                    </div>
                                </td>

                            </tr>
                        </table>
                    </div>
                </div>

                <div class="row pt-3">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-header">
                                <h3 class="card-title">Team Members</h3>
                            </div>
                            <!-- /.card-header -->
                            <div class="card-body">
                                <table id="teamMembers" class="table table-sm table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Logged Past Week (hh:mm)</th>
                                            <th>Logged This Month (hh:mm)</th>
                                            <th>Logged Total (hh:mm)</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Team Invitation Modal Form -->
    <div class="modal fade" id="emailModalCenter" tabindex="-1" role="dialog" aria-labelledby="emailModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <!--Team Invitation Modal Header-->
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Invite Team Members</h5>
                    <button type="button" id="closeButton" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form id="emailForm" asp-antiforgery="true">
                    <!--Team Invitation  Modal Body-->
                    <div class="modal-body">
                        <p>
                            Enter each team member's email address.
                            They will receive an email invitation to your DevTrack project.
                        </p>
                        <div class="row justify-content-center mb-4">
                            <div class="alert alert-danger mb-0 col-12" id="emailInvalid" style="display:none" role="alert">
                                <p class="text-center align-middle mb-0">You must enter a valid email in each field!</p>
                            </div>
                            <div class="alert alert-danger mb-0 col-12" id="emailDuplicate" style="display:none" role="alert">
                                <p class="text-center align-middle mb-0">Each field must have different email!</p>
                            </div>
                        </div>
                        <div id="member" class="row-child">
                            <div class="input-group mb-3 email-modal">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                </div>
                                <input name="email" id="email" type="email" class="form-control" placeholder="Email" required>
                                <span class="text-danger input-group" id="invalid-Email" style="display:none">Enter a valid Email</span>
                                <span class="text-danger input-group" id="invalid-User-Admin" style="display:none">You can not invite yourself to this project</span>
                                <span class="text-danger input-group" id="invalid-User-Member" style="display:none">This user has already been invited or a member of this project</span>
                            </div>
                        </div>
                        <input id="projectID" type="hidden" asp-for="@Model.Id" value="@Model.Id"></input>
                        <div class="form-group mb-3">
                            <button type="button" id="AddRow" class="btn btn-link"><i class="fa fa-plus-circle"></i>Add another member</button>
                        </div>
                    </div>
                    <!--Team Invitation Button-->
                    <div class="modal-footer">
                        <button type="button" id="emailModalClose" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button id="SendInvitation" type="button" class="btn btn-primary" disabled>Send Invitations</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <partial name="_EmailModalScriptsPartial" />
    <partial name="_ValidationScriptsPartial" />
    <script src="~/app/plugins/jquery/jquery.min.js"></script>
    <script src="~/app/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <script src="~/app/js/adminlte.js"></script>
    <script src="~/app/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/app/plugins/datatables/jquery.dataTables.js"></script>
    <script src="~/app/plugins/datatables-bs4/js/datatables.bootstrap4.js"></script>
    <script>
        var userEmails = [];
        $(function() {
            $('#teamMembers').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    url: "/App/Project/GetTeamMembersData/@Model.Id",
                    type: "GET"
                },
                "columnDefs": [
                    {
                        targets: [1, 2, 3],
                        className: "dt-center",
                        render: function(data, type, row) {
                            return `<i class="fa fa-clock td-icon"></i>  ${data}`;
                        }
                    },
                    {
                        targets: 4,
                        orderable: false,
                        className: "dt-center",
                        render: function(data, type, row) {
                            return `<button type="submit" class="btn btn-info btn-sm" onclick="javascript:void(0)"'>
                                                                                                                                                                                                                        <i class="fas fa-eye"></i>
                                                                                                                                                                                                                        View Report
                                                                                                                                                                                                                    </button>`;
                        }
                    }
                ]
            });
        });

        function GetBadgeColor(str) {
            if (str == 'Owner') {
                return "badge-success";
            }
            else if (str == "Worker") {
                return "badge-secondary";
            }
            else {
                return "";
            }
        }

        $("#SearchItem_Status,#SearchItem_Role").change(function() {
            $('#projects').DataTable().ajax.reload(null, false);
        });

        $('#courses').on('click', '.show-bs-modal', function(event) {
            var id = $(this).data("id");
            var modal = $("#modal-default");
            modal.find('.modal-body p').text('Are you sure you want to delete this record?');
            $("#deleteId").val(id);
            $("#deleteForm").attr("action", "/admin/course/delete");
            modal.modal('show');
        });

        $("#deleteButton").click(function() {
            $("#deleteForm").submit();
        });

        //For Archive
        $("#archiveButton").click(function() {
            $("#archiveForm").submit();
        });

        //<!-- Add and remove dynamic row for team invitation -->
        var rowIdx = 0;
        //Add row in modal
        $(function() {
            $("#AddRow").click(function() {
                var markup = `<div id="R${++rowIdx}" class="input-group mb-3 email-modal">
                                                        <div class="input-group-prepend dynamic-input">
                                                            <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                                        </div>
                                                        <input name="email" id="email" type="email" class="form-control" placeholder="Email" required>
                                                        <button id="remove" class="btn btn-danger remove" type="button"><i class="fa fa-trash" aria-hidden="true"></i></button>
                                                        <span class="text-danger input-group" id="invalid-Email" style="display:none">Enter a valid Email</span>
                                                        <span class="text-danger input-group" id="invalid-User-Admin" style="display:none">You can not invite yourself to this project</span>
                                                        <span class="text-danger input-group" id="invalid-User-Member" style="display:none">This user has already been invited or a member of this project</span>
                                                    </div>`;
                $("#member").append(markup);
            });
        });

        //Remove row in modal
        $('#member').on('click', '.remove', function() {
            var child = $(this).closest('div').nextAll();
            child.each(function() {
                var id = $(this).attr('id');
                var idx = $(this).children('.row-index').children('p');
                var dig = parseInt(id.substring(1));
                idx.html(`Row ${dig - 1}`);
                $(this).attr('id', `R${dig - 1}`);
            });
            $(this).closest('div').remove();
            rowIdx--;
        });

        //Triggers when the SendInvitation button is clicked
        $("body").on("click", "#SendInvitation", function() {
            //Loop through the Table rows and build a JSON array.
            var hasError = false;
            var emails = [];
            var EmailAddress;
            //Iteration through email input tags
            $(".email-modal #email").each(function() {
                var row = $(this);
                //checking if any input value is not a valid email
                if (IsEmail(row.val()) === false) {
                    hasError = true;
                }
            });
            //If all email are valid then go to
            if (hasError === false) {
                //Add all emails in the array
                $(".email-modal").each(function() {
                    var row = $(this);
                    EmailAddress = row.find("#email").val();
                    emails.push(EmailAddress.toLowerCase());
                });
                //Check if the array has any duplicate email. If not then go to
                if (hasDuplicates(emails) === false) {
                    var projectId = $("#projectID").val();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '/App/Project/GetEmails',
                        traditional: true,
                        //Send the email and projectId to controller action.
                        // Naming convention has to be maintained
                        data: { invitationEmails: emails, projectId: projectId },
                        success: function(data) {
                            //If ajax request successful then show this message
                            $("#emailSuccess").show();
                            setTimeout(function() { $("#emailSuccess").hide(); }, 3000);
                        },
                        failure: function(data) {
                            //If ajax request unsuccessful then show this message
                            $("#emailFailure").show();
                            setTimeout(function() { $("#emailFailure").hide(); }, 3000);
                        }
                    });
                    
                    $("#emailModalCenter #emailModalClose").click();
                    $('.modal-backdrop').remove();
                    $('#emailForm').trigger("reset");
                    $(".dynamic-input").each(function() {
                        $(this).parent("div").remove();
                    });
                }
                //If the array has any duplicate email show this erroer message
                else {
                    $("#emailDuplicate").show();
                    setTimeout(function() { $("#emailDuplicate").hide(); }, 3000);
                }
            }
            //If any input is not a valid email address then show this error message
            else {
                $("#emailInvalid").show();
                setTimeout(function() { $("#emailInvalid").hide(); }, 3000);
            }
        });

        //Resetting form on close button
        $("body").on("click", "#emailModalClose", function() {
            $('#emailForm').trigger("reset");
            $(".dynamic-input").each(function() {
                $(this).parent("div").remove();
            });
        });

        $("body").on("click", "#closeButton", function() {
            $('#emailForm').trigger("reset");
            $(".dynamic-input").each(function() {
                $(this).parent("div").remove();
            });
        });

        //function to validate each email
        function IsEmail(email) {
            var regex = /^([a-zA-Z0-9_\.\-\+])+\@('@')(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
            if (!regex.test(email)) {
                return false;
            } else {
                return true;
            }
        }

        //Fucntion to check if any email is duplicate
        function hasDuplicates(a) {
            const noDups = new Set(a);
            return a.length !== noDups.size;
        }

        $("body").on("click", "#inviteMemberButton", function() {
            userEmails = [];
            var projectId = $("#projectID").val();
            //Get userEmails from this Project
            $.ajax({
                async: false,
                cache: true,
                dataType: 'text',
                url: '/App/Project/GetEmails',
                traditional: true,
                //Send projectId to controller action.
                // Naming convention has to be maintained
                data: { projectId: projectId },
                success: function(data) {
                    var inpuEmails = JSON.parse(data);
                    $.each(inpuEmails, function(k, v) {
                        userEmails.push(v);
                    });
                },
                failure: function(data) {
                    alert("Failure");
                }
            });
        });

        //Checking if email is valid when typing
        $("body").on("click keyup mouseenter", ".email-modal #email", function() {
            $('#SendInvitation').prop('disabled', true);
            let emailvalid = true;
            let adminvalid = true;
            let membervalid = true;
            let email = $(this).val();
            if (IsEmail(email) === false) {
                emailvalid = false;
                $(this).parent().find('#invalid-Email').show().delay(1000).fadeOut('fast');
            }
            else if (email.toLowerCase() === userEmails[0]) {
                adminvalid = false;
                $(this).parent().find('#invalid-User-Admin').show().delay(1000).fadeOut('fast');
            }
            else if (userEmails.includes(email.toLowerCase()) === true) {
                membervalid = false;
                $(this).parent().find('#invalid-User-Member').show().delay(1000).fadeOut('fast');
            }

            if (emailvalid === true && adminvalid === true && membervalid === true) {
                $('#SendInvitation').prop('disabled', false);
            }
        });
    </script>
}